"""initial

Revision ID: 11f38c151c25
Revises: 
Create Date: 2024-12-16 13:24:33.009002

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "11f38c151c25"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("phone", sa.VARCHAR(length=15), autoincrement=False, nullable=False),
        sa.Column(
            "address", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("user_id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
    )
    op.create_table(
        "products",
        sa.Column("product_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("stock", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.CheckConstraint("price > 0", name="positive_price"),
        sa.CheckConstraint("stock > 0", name="positive_stock"),
        sa.PrimaryKeyConstraint("product_id", name="products_pkey"),
    )
    op.create_table(
        "orders",
        sa.Column(
            "order_id",
            sa.INTEGER(),
            server_default=sa.text("nextval('orders_order_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "order_date",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "total_cost",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("status", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
            name="orders_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("order_id", name="orders_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "orderitems",
        sa.Column("order_item_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("order_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("product_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.CheckConstraint("quantity > 0", name="positive_quantity"),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.order_id"],
            name="orderitems_order_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.product_id"],
            name="orderitems_product_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("order_item_id", name="orderitems_pkey"),
    )
    op.create_index(
        "lower_idx_username", "users", [sa.text("lower(name::text)")], unique=False
    )
    op.create_index(
        "lower_idx_product_name",
        "products",
        [sa.text("lower(name::text)")],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("lower_idx_product_name", table_name="products")
    op.drop_table("products")
    op.drop_index("lower_idx_username", table_name="users")
    op.drop_table("users")
    op.drop_table("orderitems")
    op.drop_table("orders")
    # ### end Alembic commands ###
